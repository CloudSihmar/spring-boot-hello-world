pipeline {
    agent any

    environment {
        // Define environment variables
        IMAGE_NAME = 'cloudsihmar/sandeep-spring' // Update with your image name
        CONTAINER_NAME = 'spring' // Update with your container name
    }

    stages {

        // Git clone stage
        stage('git clone') {
            steps {
                git 'https://github.com/CloudSihmar/spring-boot-hello-world.git'
            }
        }
        
        // Create package using Maven
        stage('package') {
            steps {
                sh 'mvn clean package'
            }
        }

        // Create image using Docker
        stage('image-creation') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} -f Dockerfile.v1 ."
            }
        }

        // Push image to Docker Hub
        stage('image-push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'docker_password', usernameVariable: 'docker_username')]) {
                    sh """
                        docker login -u ${docker_username} -p ${docker_password}
                        docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }

        // Delete the old container
        stage('delete-old-container') {
            steps {
                sh '''
                    if [ "$(docker ps -aq -f name=${CONTAINER_NAME})" ]; then
                        echo "Stopping and removing existing container..."
                        docker stop ${CONTAINER_NAME}
                        docker rm ${CONTAINER_NAME}
                    fi
                '''
            }
        }

        // Deploy the container on remote machine
        stage('deployment') {
            steps {
                sh "docker run -dt -P --name ${CONTAINER_NAME} ${IMAGE_NAME}:${BUILD_NUMBER}"
            }
        }

    }
}
